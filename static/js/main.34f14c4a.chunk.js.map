{"version":3,"sources":["app.js","index.js"],"names":["RandomDSA","props","useState","question","setQuestion","structures","actions","methods","randomNum","max","Math","floor","random","useEffectOnce","structure","length","action","method","newQuestion","generateQuestion","classes","join","className","href","rootElement","document","getElementById","ReactDOM","render"],"mappings":"4LA8DeA,MAxDf,SAAmBC,GAAQ,IAAD,EACQC,mBAAS,IADjB,mBACjBC,EADiB,KACPC,EADO,KAGlBC,EAAa,CACjB,QACA,QACA,QACA,cACA,cACA,OAEIC,EAAU,CACd,+BACA,2CACA,6CACA,mCACA,0BACA,yBACA,qBACA,mBAEIC,EAAU,CAAC,cAAe,eAEhC,SAASC,EAAUC,GACjB,OAAOC,KAAKC,MAAMD,KAAKE,SAAWH,GAWpCI,aAAc,YARd,WACE,IAAIC,EAAYT,EAAWG,EAAUH,EAAWU,SAC5CC,EAASV,EAAQE,EAAUF,EAAQS,SACnCE,EAASV,EAAQC,EAAUD,EAAQQ,SACnCG,EAAW,kBAAcJ,EAAd,aAA4BE,EAA5B,YAAsCC,GACrDb,EAAYc,GAIZC,MAGF,IAAMC,EAAU,CAAC,WAAYjB,EAAW,UAAY,IAAIkB,KAAK,KAE7D,OACE,oCACE,gCACE,yDAEF,8BACE,wBAAIC,UAAWF,GAAUjB,IAE3B,0DAC2B,8CAAmB,uBAAGoB,KAAK,8BAAR,sBAAnB,QCnD3BC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,kBAAC,EAAD,MAASJ,I","file":"static/js/main.34f14c4a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useEffectOnce } from 'react-use';\n\n\nimport './styles.css';\n\nfunction RandomDSA(props) {\n  const [question, setQuestion] = useState('');\n\n  const structures = [\n    'Array',\n    'Stack',\n    'Queue',\n    'Linked List',\n    'Binary Tree',\n    'BST',\n  ];\n  const actions = [\n    'Find the sum of all elements',\n    'Determine if a specific value is present',\n    'Return a list of all duplicate values/keys',\n    'Remove all duplicate values/keys',\n    'Find the maximium value',\n    'Find the minimum value',\n    'Reverse the values',\n    'Sort the values',\n  ];\n  const methods = ['Iteratively', 'Recursively'];\n\n  function randomNum(max) {\n    return Math.floor(Math.random() * max);\n  }\n\n  function generateQuestion() {\n    let structure = structures[randomNum(structures.length)];\n    let action = actions[randomNum(actions.length)];\n    let method = methods[randomNum(methods.length)];\n    let newQuestion = `Given a ${structure}, ${action} ${method}`;\n    setQuestion(newQuestion);\n  }\n\n  useEffectOnce(() => {\n    generateQuestion();\n  });\n\n  const classes = ['question', question ? 'visible' : ''].join(' ');\n\n  return (\n    <>\n      <header>\n        <h1>Data Structures Practice</h1>\n      </header>\n      <main>\n        <h2 className={classes}>{question}</h2>\n      </main>\n      <footer>\n        &copy; 2020 Code Fellows <span>(Inspired by <a href=\"https://github.com/mnfmnfm\">Michelle Ferreirae</a>)</span>\n      </footer>\n    </>\n  );\n}\n\nexport default RandomDSA;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}